//////////////////////////////////////////////////////////////////////////////
// Name:        SVGElement.h
// Author:      Alex Thuering
// Copyright:   (c) 2005 Alex Thuering
// Licence:     wxWindows licence
// Notes:       generated by generate.py
//////////////////////////////////////////////////////////////////////////////

#ifndef WX_SVG_ELEMENT_H
#define WX_SVG_ELEMENT_H

class wxSVGSVGElement;
class wxSVGElement;
class wxSVGDocument;

#include "Element.h"
#include "String_wxsvg.h"
#include "SVGDTD.h"

class wxSVGElement:
  public wxSvgXmlElement
{
  protected:
    std::wstring m_id;
    std::wstring m_xmlbase;
    wxSVGSVGElement* m_ownerSVGElement;
    wxSVGElement* m_viewportElement;

  public:
    inline const std::wstring& GetId() const { return m_id; }
    inline void SetId(const std::wstring& n) { m_id = n; }

    inline const std::wstring& GetXmlbase() const { return m_xmlbase; }
    inline void SetXmlbase(const std::wstring& n) { m_xmlbase = n; }

    inline wxSVGSVGElement* GetOwnerSVGElement() const { return m_ownerSVGElement; }
    inline void SetOwnerSVGElement(wxSVGSVGElement* n) { m_ownerSVGElement = n; }

    inline wxSVGElement* GetViewportElement() const { return m_viewportElement; }
    inline void SetViewportElement(wxSVGElement* n) { m_viewportElement = n; }


  public:
    virtual wxSVGElement* GetSvgElement(){return this;}
    wxSVGElement(std::wstring tagName = _T("")):
      wxSvgXmlElement(wxSVGXML_ELEMENT_NODE, tagName),
      m_ownerSVGElement(NULL), m_viewportElement(NULL) { }
    virtual ~wxSVGElement() {}
    
    virtual wxSVGDTD GetDtd() const = 0;
    virtual void AddProperty(const std::wstring& name, const std::wstring& value)
      { SetAttribute(name, value); }
  public:
    bool HasAttribute(const std::wstring& name);
    std::wstring GetAttribute(const std::wstring& name);
    bool SetAttribute(const std::wstring& name, const std::wstring& value);
    wxSvgXmlAttrHash GetAttributes() const;
};

#endif // WX_SVG_ELEMENT_H
