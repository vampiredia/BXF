//////////////////////////////////////////////////////////////////////////////
// Name:        SVGFEMergeNodeElement.h
// Author:      Alex Thuering
// Copyright:   (c) 2005 Alex Thuering
// Licence:     wxWindows licence
// Notes:       generated by generate.py
//////////////////////////////////////////////////////////////////////////////

#ifndef WX_SVG_FE_MERGE_NODE_ELEMENT_H
#define WX_SVG_FE_MERGE_NODE_ELEMENT_H

#include "SVGElement.h"
#include "SVGAnimatedString.h"
#include "String_wxsvg.h"
#include "Element.h"

class wxSVGFEMergeNodeElement:
  public wxSVGElement
{
  protected:
    wxSVGAnimatedString m_in1;

  public:
    inline const wxSVGAnimatedString& GetIn1() const { return m_in1; }
    inline void SetIn1(const wxSVGAnimatedString& n) { m_in1 = n; }
    inline void SetIn1(const std::wstring& n) { m_in1.SetBaseVal(n); }

  public:
    wxSVGFEMergeNodeElement(std::wstring tagName = _T("feMergeNode")):
      wxSVGElement(tagName) {}
    virtual ~wxSVGFEMergeNodeElement() {}
    wxSvgXmlNode* CloneNode(bool deep = true) { return new wxSVGFEMergeNodeElement(*this); }
    bool HasAttribute(const std::wstring& name);
    std::wstring GetAttribute(const std::wstring& name);
    bool SetAttribute(const std::wstring& name, const std::wstring& value);
    wxSvgXmlAttrHash GetAttributes() const;
    virtual wxSVGDTD GetDtd() const { return wxSVG_FEMERGENODE_ELEMENT; }
};

#endif // WX_SVG_FE_MERGE_NODE_ELEMENT_H
